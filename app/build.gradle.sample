apply plugin: 'com.android.application'

android {
    signingConfigs {
        jamilWinkelbaum {
            keyAlias 'jamilWinkelbaum'
            keyPassword 'jamilWinkelbaum'
            storeFile file('/Users/jeff/keystores/jamilWinkelbaum.jks')
            storePassword 'jamilWinkelbaum'
        }
    }
    compileSdkVersion 21
    buildToolsVersion "21.1.2"
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'LICENSE.txt'
    }
    defaultConfig {
        applicationId "com.example.jeff.swap"
        minSdkVersion 11
        targetSdkVersion 21
        versionCode 1
    }
    buildTypes {
        debug {
            buildConfigField "String", "SERVER_URL", '"http://10.0.2.2:3000"'
            buildConfigField "String", "STRIPE_SECRET_KEY", 'YOUR KEY HERE'
            buildConfigField "String", "STRIPE_PUBLISHABLE_KEY", 'YOUR KEY HERE'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_URL", 'YOUR ADDRESS HERE'
            debuggable false
        }
        releaseClone {
            buildConfigField "String", "SERVER_URL", 'YOUR ADDRESS HERE'
            buildConfigField "String", "STRIPE_SECRET_KEY", 'YOUR KEY HERE'
            buildConfigField "String", "STRIPE_PUBLISHABLE_KEY", 'YOUR KEY HERE'
            debuggable true
        }
    }
    productFlavors {
        pro {
            applicationId 'com.example.jeff.swap'
            targetSdkVersion 21
            versionCode 1
        }
        jamilWinkelbaum {
            applicationId 'com.example.jeff.swap'
            versionCode 1
            signingConfig signingConfigs.jamilWinkelbaum
            targetSdkVersion 21
        }
    }
}

apply plugin: 'org.robolectric'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.google.android.gms:play-services-base:7.0.0'
    compile 'com.google.android.gms:play-services-gcm:7.0.0'
    compile 'com.google.android.gms:play-services-location:7.0.0'
    compile 'com.google.android.gms:play-services-maps:7.0.0'
    compile 'com.google.android.gms:play-services-nearby:7.0.0'
    compile 'com.android.support:recyclerview-v7:21.0.+'
    compile 'com.android.support:cardview-v7:21.0.+'
    compile 'com.github.nkzawa:socket.io-client:0.4.0'
    compile('org.apache.httpcomponents:httpmime:4.3.6') {
        exclude module: 'httpclient'
    }
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5'
    compile 'com.stripe:stripe-android:+'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile('org.robolectric:robolectric:2.4') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}

android {
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

robolectric {
    // configure the set of classes for JUnit tests
    include '**/*Robolectric.class'

    // configure max heap size of the test JVM
    maxHeapSize = '2048m'
    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}
